- name: Get Cluster Endpoint.
  shell: aws eks describe-cluster --name {{eks_name}} --region {{ec2_region}}  --query cluster.endpoint --output text
  changed_when: false
  register: eks_endpoint

- name: Retrieve certificateAuthority data for the cluster.
  shell: aws eks describe-cluster --name {{eks_name}} --region {{ec2_region}}  --query cluster.certificateAuthority.data --output text
  changed_when: false
  register: eks_ca_data

- name: Create kubeconfig dir for AWS EKS.
  file:
    path: '{{kubeconfig_dir}}'
    state: directory

- name: Create kubeconfig file
  copy:
    dest: '{{kubeconfig_dir}}/config-{{eks_name}}'
    content: |
      apiVersion: v1
      clusters:
      - cluster:
          server: {{eks_endpoint.stdout}}
          certificate-authority-data: {{eks_ca_data.stdout}}
        name: kubernetes
      contexts:
      - context:
          cluster: kubernetes
          user: aws
        name: aws
      current-context: aws
      kind: Config
      preferences: {}
      users:
      - name: aws
        user:
          exec:
            apiVersion: client.authentication.k8s.io/v1alpha1
            command: aws-iam-authenticator
            args:
              - "token"
              - "-i"
              - "{{eks_name}}"
              # - "-r"
              # - "<role-arn>"
              # env:
              # - name: AWS_PROFILE
              #   value: "<aws-profile>"

- name: Update bashrc with Kubeconfig path to ensure that Kubectl picks it up.
  lineinfile:
    path: /home/{{lookup('env','USER')}}/.bashrc
    line: 'export KUBECONFIG=$KUBECONFIG:{{kubeconfig_dir}}/config-{{eks_name}}'
